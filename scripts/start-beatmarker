#!/bin/bash

# BeatMarkerAnalyzer - Script di avvio automatico (Electron)
# Uso: start-beatmarker
#
# Funzioni:
# 1. Kill processi attivi su porta 5173
# 2. Verifica sonic-annotator e dipendenze
# 3. Compila TypeScript per Electron
# 4. Avvio applicazione desktop completa

set -e  # Exit on error

# Colori per output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Directory del progetto BeatMarkerAnalyzer
PROJECT_DIR="/Users/adrianovisconti/Documents/Sviluppo Software/GitHub/BeatMarkerAnalyzer"
PORT=5173

echo -e "${BLUE}🎵 BeatMarkerAnalyzer - Script di avvio${NC}"
echo "================================================="

# Funzione per stampare step
print_step() {
    echo -e "\n${YELLOW}📋 Step $1: $2${NC}"
}

# Funzione per controllo directory progetto
check_project_dir() {
    if [ ! -d "$PROJECT_DIR" ]; then
        echo -e "${RED}❌ Errore: Directory progetto non trovata${NC}"
        echo "   Path: $PROJECT_DIR"
        exit 1
    fi

    if [ ! -f "$PROJECT_DIR/package.json" ]; then
        echo -e "${RED}❌ Errore: package.json non trovato${NC}"
        exit 1
    fi

    echo -e "${GREEN}✅ Directory progetto valida${NC}"
}

# Funzione per kill processi su porta specifica
kill_port_processes() {
    local port=$1
    echo "🔍 Controllo processi attivi sulla porta $port..."

    # Find process using the port
    local pids=$(lsof -ti :$port 2>/dev/null || true)

    if [ -n "$pids" ]; then
        echo -e "${YELLOW}⚠️  Trovati processi attivi sulla porta $port:${NC}"
        echo "$pids" | while read -r pid; do
            if [ -n "$pid" ]; then
                local process_info=$(ps -p $pid -o pid,comm 2>/dev/null || echo "N/A")
                echo "   PID $pid: $process_info"
            fi
        done

        echo "🔪 Terminazione processi..."
        echo "$pids" | xargs -r kill -9 2>/dev/null || true

        # Verifica che i processi siano terminati
        sleep 2
        local remaining=$(lsof -ti :$port 2>/dev/null || true)
        if [ -n "$remaining" ]; then
            echo -e "${RED}❌ Alcuni processi non sono stati terminati${NC}"
            return 1
        else
            echo -e "${GREEN}✅ Tutti i processi sulla porta $port terminati${NC}"
        fi
    else
        echo -e "${GREEN}✅ Nessun processo attivo sulla porta $port${NC}"
    fi
}

# Funzione per avvio applicazione Electron
start_electron_app() {
    echo "🚀 Avvio applicazione Electron..."
    cd "$PROJECT_DIR"

    # Controllo dipendenze
    if [ ! -d "node_modules" ]; then
        echo "📦 Installazione dipendenze..."
        npm install
    fi

    # Verifica sonic-annotator
    if [ ! -f "sonic-annotator" ]; then
        echo -e "${YELLOW}⚠️  sonic-annotator non trovato nella directory del progetto${NC}"
        echo "   L'analisi automatica potrebbe non funzionare"
    else
        echo -e "${GREEN}✅ sonic-annotator trovato${NC}"
    fi

    # Compila TypeScript per Electron se necessario
    if [ ! -f "dist-electron/main.js" ] || [ "electron/main.ts" -nt "dist-electron/main.js" ]; then
        echo "🔧 Compilazione TypeScript per Electron..."
        npx tsc -p electron/tsconfig.json
    fi

    echo "💻 Avvio app Electron (versione completa con sonic-annotator)..."

    # Avvia Vite in background
    npm run dev &
    VITE_PID=$!

    echo "⏳ Attendo che Vite sia pronto..."
    sleep 3

    # Verifica che Vite sia attivo
    if ! curl -s http://localhost:5173 > /dev/null; then
        echo "⏳ Vite ancora in caricamento, attendo altri 2 secondi..."
        sleep 2
    fi

    echo "🚀 Avvio finestra Electron..."
    # Avvia Electron direttamente
    NODE_ENV=development npx electron dist-electron/main.js
}

# Funzione principale
main() {
    print_step "1" "Controllo directory progetto"
    check_project_dir

    print_step "2" "Terminazione processi esistenti"
    kill_port_processes $PORT

    print_step "3" "Avvio applicazione Electron"
    echo ""
    echo "================================================="
    echo -e "${GREEN}🎉 Avvio BeatMarkerAnalyzer (Electron)...${NC}"
    echo ""
    echo -e "💻 Tipo:          ${BLUE}Applicazione desktop completa${NC}"
    echo -e "🎵 Funzionalità:  ${BLUE}Analisi sonic-annotator inclusa${NC}"
    echo -e "📁 Directory:     ${BLUE}$PROJECT_DIR${NC}"
    echo -e "🛑 Per fermare:   ${YELLOW}Ctrl+C${NC}"
    echo ""
    echo "================================================="

    start_electron_app
}

# Gestione segnali per cleanup
cleanup() {
    echo -e "\n${YELLOW}🛑 Arresto dell'applicazione...${NC}"

    # Termina Vite se ancora attivo
    if [ ! -z "$VITE_PID" ]; then
        kill $VITE_PID 2>/dev/null || true
    fi

    # Termina processi sulla porta 5173
    kill_port_processes $PORT

    echo -e "${GREEN}✅ Cleanup completato${NC}"
    exit 0
}

trap cleanup SIGINT SIGTERM

# Esecuzione principale
main "$@"